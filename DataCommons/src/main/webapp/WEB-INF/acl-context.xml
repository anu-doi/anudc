<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.1.xsd
	http://www.springframework.org/schema/jdbc
	http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd">
	
	<!-- Enables Method Security and Expression-based access control -->
	<security:global-method-security pre-post-annotations="enabled">
		<security:expression-handler ref="expressionHandler"/>
	</security:global-method-security>
	
	<!-- See 15.3.2 Built-In Expression @http://static.springsource.org/spring-security/site/docs/3.0.x/reference/el-access.html#el-permission-evaluator -->
	<bean id="expressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<!-- To use hasPermission() in expressions, configure a PermissionEvaluator -->
		<property name="permissionEvaluator" ref="permissionEvaluator" />
		<property name = "roleHierarchy" ref="roleHierarchy"/>
	</bean>
	
	<bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" id="webExpressionHandler">
		<property name="permissionEvaluator" ref="permissionEvaluator" />
	</bean>
	
	
	<!-- Declare a custom PermissionEvaluator
		We'll rely on the standard AclPermissionEvaluator implementation -->
	<bean class="org.springframework.security.acls.AclPermissionEvaluator" id="permissionEvaluator">
		<constructor-arg ref="aclService"/>
		<property name="permissionFactory" ref="permissionFactory" />
	</bean>
	
	<!-- Declare an acl service -->
	<bean class="org.springframework.security.acls.jdbc.JdbcMutableAclService" id="aclService">
		<constructor-arg ref="dataSource"/>
		<constructor-arg ref="lookupStrategy"/>
		<constructor-arg ref="aclCache"/>
	</bean>
	
	<!-- Declare a lookup strategy-->
	<bean id="lookupStrategy" class="org.springframework.security.acls.jdbc.BasicLookupStrategy">
		<constructor-arg ref="dataSource"/>
		<constructor-arg ref="aclCache"/>
		<constructor-arg ref="aclAuthorizationStrategy"/>
		<constructor-arg ref="auditLogger"/>
		<property name="permissionFactory" ref="permissionFactory" />
	</bean>
	
	<!-- Declare an acl cache-->  
	<bean id="aclCache" class="org.springframework.security.acls.domain.EhCacheBasedAclCache">
		<constructor-arg>
			<bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">
			<property name="cacheManager">
				<bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>
			</property>
			<property name="cacheName" value="aclCache"/>
			</bean>
		</constructor-arg>
		<constructor-arg>
			<bean class="org.springframework.security.acls.domain.DefaultPermissionGrantingStrategy">
				<constructor-arg>
					<bean class="org.springframework.security.acls.domain.ConsoleAuditLogger"/>
				</constructor-arg>
			</bean>
		</constructor-arg>
		<constructor-arg>
			<bean class="org.springframework.security.acls.domain.AclAuthorizationStrategyImpl">
				<constructor-arg>
					<list>
						<bean class="org.springframework.security.core.authority.SimpleGrantedAuthority">
							<constructor-arg value="ROLE_ACL_ADMIN"/>
						</bean>
					</list>
				</constructor-arg>
			</bean>
		</constructor-arg>
	</bean>
	
	<!-- Declare an acl authorization strategy-->
	<bean id="aclAuthorizationStrategy" class="org.springframework.security.acls.domain.AclAuthorizationStrategyImpl">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.core.authority.SimpleGrantedAuthority">
					<constructor-arg value="ROLE_ADMIN"/>
				</bean>
				<bean class="org.springframework.security.core.authority.SimpleGrantedAuthority">
					<constructor-arg value="ROLE_ADMIN"/>
				</bean>
				<bean class="org.springframework.security.core.authority.SimpleGrantedAuthority">
					<constructor-arg value="ROLE_ADMIN"/>
				</bean>
			</list>
		</constructor-arg>
	</bean>
	
	<bean id="permissionFactory" class="au.edu.anu.datacommons.security.acl.CustomPermissionFactory" />
	
	<!-- Declare an audit logger-->
	<bean id="auditLogger" class="org.springframework.security.acls.domain.ConsoleAuditLogger"/>
	
	<!-- http://static.springsource.org/spring-security/site/docs/3.0.x/apidocs/org/springframework/security/access/hierarchicalroles/RoleHierarchyImpl.html -->
	<bean id="roleHierarchy"  class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
		<property name="hierarchy">
			<value>
				ROLE_ADMIN > ROLE_ANU_USER
				ROLE_ANU_USER > ROLE_REGISTERED
			</value>
		</property>
	</bean>
</beans>