<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.2.xsd
	http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task-4.2.xsd">
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>file:#{systemProperties['dc.home']}/config/datacommons.properties</value>
			</list>
		</property>
	</bean>
	
	<context:annotation-config />
	
	<context:component-scan base-package="au.edu.anu.datacommons" />
	
	<bean id="contextApplicationContextProvider" class="au.edu.anu.datacommons.util.ApplicationContextProvider" />
	
	<bean id="riSearchService" class="au.edu.anu.datacommons.search.ExternalPoster">
		<property name="client">
			<ref bean="client"/>
		</property>
		<property name="username" value="${fedora.username}" />
		<property name="password" value="${fedora.password}" />
		<property name="url" value="${fedora.baseURI}${fedora.riSearchURI}" />
		<property name="type" value="application/x-www-form-urlencoded" />
		<property name="acceptType" value="text/xml" />
		<property name="parameters">
			<map>
				<entry key="dt" value="on" />
				<entry key="format" value="Sparql" />
				<entry key="lang" value="sparql" />
				<entry key="limit" value="1000" />
				<entry key="type" value="tuples" />
			</map>
		</property>
	</bean>
	
	<bean id="riSearchJSONService" class="au.edu.anu.datacommons.search.ExternalPoster">
		<property name="client">
			<ref bean="client"/>
		</property>
		<property name="username" value="${fedora.username}" />
		<property name="password" value="${fedora.password}" />
		<property name="url" value="${fedora.baseURI}${fedora.riSearchURI}" />
		<property name="type" value="application/x-www-form-urlencoded" />
		<property name="acceptType" value="application/json" />
		<property name="parameters">
			<map>
				<entry key="dt" value="on" />
				<entry key="format" value="json" />
				<entry key="lang" value="sparql" />
				<entry key="limit" value="10" />
				<entry key="type" value="tuples" />
			</map>
		</property>
	</bean>
	
	<bean id="gsearchUpdateService" class="au.edu.anu.datacommons.search.ExternalPoster">
		<property name="client">
			<ref bean="client"/>
		</property>
		<property name="username" value="${fedora.username}" />
		<property name="password" value="${fedora.password}" />
		<property name="url" value="${gsearch.url}/rest" />
		<property name="type" value="application/x-www-form-urlencoded" />
		<property name="acceptType" value="text/html" />
		<property name="parameters">
			<map>
				<entry key="operation" value="updateIndex" />
				<entry key="action" value="fromPid" />
			</map>
		</property>
	</bean>
	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${email.host}" />
		<property name="port" value="${email.port}" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">${email.smtp.auth}</prop>
				<prop key="mail.smtp.starttls.enable">${email.smtp.starttls}</prop>
			</props>
		</property>
	</bean>
	
	<bean id="dcStorage" class="au.edu.anu.datacommons.storage.DcStorage" scope="singleton">
		<constructor-arg value="${upload.bagsDir}" />
	</bean>
	
	<bean id="storageSearch" class="au.edu.anu.datacommons.storage.search.StorageSearchService">
		<constructor-arg value="${storage.search.url}" />
	</bean>
	
	<bean id="recordDataInfoService" class="au.edu.anu.datacommons.storage.info.RecordDataInfoService">
	</bean>
	
	<bean id="tagFilesService" class="au.edu.anu.datacommons.storage.tagfiles.TagFilesService" depends-on="threadPoolService">
		<property name="writeFreq" value="${storage.tagfiles.writeFreqSec}" />
		<property name="maxEntries" value="${storage.tagfiles.cacheSize}" />
	</bean>
	
	<bean id="tagFilesStorageEventListener" class="au.edu.anu.datacommons.storage.event.TagFilesStorageEventListener">
		<property name="archiveRootDir">
			<ref bean="archiveRootDir"/>
		</property>
	</bean>
	
	<bean id="jQueryFileUploadHandler" class="au.edu.anu.datacommons.storage.jqueryupload.JQueryFileUploadHandler">
		<constructor-arg value="${upload.uploadDir}" />
	</bean>
	
	<bean id="archiveRootDir" class="java.nio.file.Paths" factory-method="get">
		<constructor-arg value="${upload.archiveBaseDir}" />
		<constructor-arg><array /></constructor-arg>
	</bean>
	
	<bean id="uploadDir" class="java.nio.file.Paths" factory-method="get">
		<constructor-arg value="${upload.uploadDir}" />
		<constructor-arg><array /></constructor-arg>
	</bean>
	
	<bean id="threadPoolService" class="au.edu.anu.datacommons.tasks.ThreadPoolService">
		<constructor-arg value="16" />
	</bean>
	
	<task:scheduler id="taskScheduler"/>
	
	<task:executor id="taskExecutor" pool-size="5-25" queue-capacity="100" />
	
	<task:scheduled-tasks scheduler="taskScheduler">
		<task:scheduled ref="embargoEmailer" method="run" cron="0 37 6 * * *" />
		<task:scheduled ref="embargoLifter" method="run" cron="0 17 1 * * *" />
	</task:scheduled-tasks>
	
	<bean id="embargoEmailer" class="au.edu.anu.datacommons.embargo.EmbargoEmailer">
		<constructor-arg name="mailSender" ref="mailSender" />
		<constructor-arg name="reminderDays" value="${embargo.reminder.days}" />
	</bean>
	<bean id="embargoLifter" class="au.edu.anu.datacommons.embargo.EmbargoLifter" />
	
	<bean id="client" class="com.sun.jersey.api.client.Client" factory-method="create"></bean>
	
	<bean id="metadataProviderGitHub" class="au.edu.anu.datacommons.external.github.MetadataProviderGitHub"></bean>
	<bean id="metadataProviderGmd" class="au.edu.anu.datacommons.external.geographicmetadata.MetadataProviderGmd"></bean>

	<bean id="fileSystemStorageProvider" class="au.edu.anu.datacommons.storage.provider.FileSystemStorageProvider">
		<constructor-arg value="${upload.bagsDir}"></constructor-arg>
	</bean>	
	
	<bean id="storageController" class="au.edu.anu.datacommons.storage.controller.StorageControllerImpl"></bean>
	
	<bean id="storageProviderResolver" class="au.edu.anu.datacommons.storage.provider.StorageProviderResolver"></bean>
</beans>
